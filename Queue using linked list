#include<stdio.h>
#include<stdlib.h>

struct node   // creating a node 
{
  int data;
  struct node *next;
};

struct node *front,*rear;

void insert()  // function to insert element into queue
{
  struct node *ptr=(struct node *)malloc(sizeof(struct node));
  int item;
  if(ptr==NULL)  //checking if queue is full
  {
    printf("Overflow");
    return;
  }
  else
  {
    printf("Enter the element : ");
    scanf("%d",&item);
    
    ptr->data=item;
    if(front==NULL)
    {
      front=ptr;
      rear=ptr;
      front->next=NULL;
      front->next=NULL;
    }
    else
    {
      rear->next=ptr;
      rear=ptr;
      rear->next=NULL;
    }
   }
}

void delete()  //function to delete the first element of the queue
{
  struct node *ptr=(struct node *)malloc(sizeof(struct node));
  if(front==NULL)  //checking if queue is empty
  {
    printf("Underflow");
    return ;
  }
  
  else
  {
    ptr=front;
    printf("deleted element %d\n",ptr->data);
    front=front->next;
    free(ptr);
  }
}

void display()  //function to display 
{
  struct node *ptr;
  ptr=front;
  if(ptr==NULL)   //checking if queue is empty
  {
    printf("Underflow");
    return ;
  }  
  
  else
  {
    printf("Printing elements \n");
    while(ptr!=NULL)
    {
      printf("%d\n",ptr->data);
      ptr=ptr->next;
    }
  }
}
void main()
{
   int choice, value;
   printf("\n:: Queue Implementation using Linked List ::\n");
   while(1)
   {
      printf("1. Insert\n2. Delete\n3. Display\n4. Exit\n");
      printf("Enter your choice: ");
      scanf("%d",&choice);
      switch(choice)
      {
	 case 1: insert(value);
	 break;
	 case 2: delete();
	 break;
	 case 3: display();
	 break;
	 case 4: exit(0);
	 default: printf("\nWrong selection!!! Please try again!!!\n");
      }
   }
}
